<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.PorductMapper" >
  <resultMap id="BaseResultMap" type="model.Porduct" >
    <id column="proid" property="proid" jdbcType="INTEGER" />
    <result column="proname" property="proname" jdbcType="VARCHAR" />
    <result column="ptid" property="ptid" jdbcType="INTEGER" />
    <result column="createtime" property="createtime" jdbcType="DATE" />
    <result column="price" property="price" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="browse" property="browse" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    proid, proname, ptid, createtime, price, uid, info, browse
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from porduct
    where proid = #{proid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from porduct
    where proid = #{proid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="model.Porduct" >
    insert into porduct (proid, proname, ptid, 
      createtime, price, uid, 
      info, browse)
    values (#{proid,jdbcType=INTEGER}, #{proname,jdbcType=VARCHAR}, #{ptid,jdbcType=INTEGER}, 
      #{createtime,jdbcType=DATE}, #{price,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, 
      #{info,jdbcType=VARCHAR}, #{browse,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="model.Porduct" >
    insert into porduct
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="proid != null" >
        proid,
      </if>
      <if test="proname != null" >
        proname,
      </if>
      <if test="ptid != null" >
        ptid,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="info != null" >
        info,
      </if>
      <if test="browse != null" >
        browse,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="proid != null" >
        #{proid,jdbcType=INTEGER},
      </if>
      <if test="proname != null" >
        #{proname,jdbcType=VARCHAR},
      </if>
      <if test="ptid != null" >
        #{ptid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=DATE},
      </if>
      <if test="price != null" >
        #{price,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="browse != null" >
        #{browse,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.Porduct" >
    update porduct
    <set >
      <if test="proname != null" >
        proname = #{proname,jdbcType=VARCHAR},
      </if>
      <if test="ptid != null" >
        ptid = #{ptid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=DATE},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="browse != null" >
        browse = #{browse,jdbcType=INTEGER},
      </if>
    </set>
    where proid = #{proid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Porduct" >
    update porduct
    set proname = #{proname,jdbcType=VARCHAR},
      ptid = #{ptid,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=DATE},
      price = #{price,jdbcType=INTEGER},
      uid = #{uid,jdbcType=INTEGER},
      info = #{info,jdbcType=VARCHAR},
      browse = #{browse,jdbcType=INTEGER}
    where proid = #{proid,jdbcType=INTEGER}
  </update>
</mapper>