<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.ResumeMapper" >
  <resultMap id="BaseResultMap" type="model.Resume" >
    <id column="resumeId" property="resumeid" jdbcType="INTEGER" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="experience" property="experience" jdbcType="VARCHAR" />
    <result column="education" property="education" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    resumeId, uid, job, address, price, name, age, experience, education, phone, sex
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from resume
    where resumeId = #{resumeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from resume
    where resumeId = #{resumeid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="model.Resume" >
    insert into resume (resumeId, uid, job, 
      address, price, name, 
      age, experience, education, 
      phone, sex)
    values (#{resumeid,jdbcType=INTEGER}, #{uid,jdbcType=INTEGER}, #{job,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{price,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{experience,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="model.Resume" >
    insert into resume
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="resumeid != null" >
        resumeId,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="experience != null" >
        experience,
      </if>
      <if test="education != null" >
        education,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="sex != null" >
        sex,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="resumeid != null" >
        #{resumeid,jdbcType=INTEGER},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="experience != null" >
        #{experience,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.Resume" >
    update resume
    <set >
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="experience != null" >
        experience = #{experience,jdbcType=VARCHAR},
      </if>
      <if test="education != null" >
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
    </set>
    where resumeId = #{resumeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Resume" >
    update resume
    set uid = #{uid,jdbcType=INTEGER},
      job = #{job,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      price = #{price,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      experience = #{experience,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER}
    where resumeId = #{resumeid,jdbcType=INTEGER}
  </update>
</mapper>